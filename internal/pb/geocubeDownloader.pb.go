// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: pb/geocubeDownloader.proto

package geocube

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_pb_geocubeDownloader_proto protoreflect.FileDescriptor

var file_pb_geocubeDownloader_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x62, 0x2f, 0x67, 0x65, 0x6f, 0x63, 0x75, 0x62, 0x65, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x67, 0x65,
	0x6f, 0x63, 0x75, 0x62, 0x65, 0x1a, 0x10, 0x70, 0x62, 0x2f, 0x63, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x65, 0x0a, 0x11, 0x47, 0x65, 0x6f, 0x63, 0x75,
	0x62, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x62, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x75, 0x62,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x62, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x67, 0x65, 0x6f, 0x63, 0x75,
	0x62, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x62, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x0e,
	0x5a, 0x0c, 0x2e, 0x2f, 0x70, 0x62, 0x3b, 0x67, 0x65, 0x6f, 0x63, 0x75, 0x62, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_pb_geocubeDownloader_proto_goTypes = []interface{}{
	(*GetCubeMetadataRequest)(nil),  // 0: geocube.GetCubeMetadataRequest
	(*GetCubeMetadataResponse)(nil), // 1: geocube.GetCubeMetadataResponse
}
var file_pb_geocubeDownloader_proto_depIdxs = []int32{
	0, // 0: geocube.GeocubeDownloader.GetCube:input_type -> geocube.GetCubeMetadataRequest
	1, // 1: geocube.GeocubeDownloader.GetCube:output_type -> geocube.GetCubeMetadataResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pb_geocubeDownloader_proto_init() }
func file_pb_geocubeDownloader_proto_init() {
	if File_pb_geocubeDownloader_proto != nil {
		return
	}
	file_pb_catalog_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_geocubeDownloader_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_geocubeDownloader_proto_goTypes,
		DependencyIndexes: file_pb_geocubeDownloader_proto_depIdxs,
	}.Build()
	File_pb_geocubeDownloader_proto = out.File
	file_pb_geocubeDownloader_proto_rawDesc = nil
	file_pb_geocubeDownloader_proto_goTypes = nil
	file_pb_geocubeDownloader_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GeocubeDownloaderClient is the client API for GeocubeDownloader service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GeocubeDownloaderClient interface {
	// Request cube using metadatas returned by a call to Geocube.GetCube()
	GetCube(ctx context.Context, in *GetCubeMetadataRequest, opts ...grpc.CallOption) (GeocubeDownloader_GetCubeClient, error)
}

type geocubeDownloaderClient struct {
	cc grpc.ClientConnInterface
}

func NewGeocubeDownloaderClient(cc grpc.ClientConnInterface) GeocubeDownloaderClient {
	return &geocubeDownloaderClient{cc}
}

func (c *geocubeDownloaderClient) GetCube(ctx context.Context, in *GetCubeMetadataRequest, opts ...grpc.CallOption) (GeocubeDownloader_GetCubeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GeocubeDownloader_serviceDesc.Streams[0], "/geocube.GeocubeDownloader/GetCube", opts...)
	if err != nil {
		return nil, err
	}
	x := &geocubeDownloaderGetCubeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GeocubeDownloader_GetCubeClient interface {
	Recv() (*GetCubeMetadataResponse, error)
	grpc.ClientStream
}

type geocubeDownloaderGetCubeClient struct {
	grpc.ClientStream
}

func (x *geocubeDownloaderGetCubeClient) Recv() (*GetCubeMetadataResponse, error) {
	m := new(GetCubeMetadataResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GeocubeDownloaderServer is the server API for GeocubeDownloader service.
type GeocubeDownloaderServer interface {
	// Request cube using metadatas returned by a call to Geocube.GetCube()
	GetCube(*GetCubeMetadataRequest, GeocubeDownloader_GetCubeServer) error
}

// UnimplementedGeocubeDownloaderServer can be embedded to have forward compatible implementations.
type UnimplementedGeocubeDownloaderServer struct {
}

func (*UnimplementedGeocubeDownloaderServer) GetCube(*GetCubeMetadataRequest, GeocubeDownloader_GetCubeServer) error {
	return status.Errorf(codes.Unimplemented, "method GetCube not implemented")
}

func RegisterGeocubeDownloaderServer(s *grpc.Server, srv GeocubeDownloaderServer) {
	s.RegisterService(&_GeocubeDownloader_serviceDesc, srv)
}

func _GeocubeDownloader_GetCube_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetCubeMetadataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GeocubeDownloaderServer).GetCube(m, &geocubeDownloaderGetCubeServer{stream})
}

type GeocubeDownloader_GetCubeServer interface {
	Send(*GetCubeMetadataResponse) error
	grpc.ServerStream
}

type geocubeDownloaderGetCubeServer struct {
	grpc.ServerStream
}

func (x *geocubeDownloaderGetCubeServer) Send(m *GetCubeMetadataResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _GeocubeDownloader_serviceDesc = grpc.ServiceDesc{
	ServiceName: "geocube.GeocubeDownloader",
	HandlerType: (*GeocubeDownloaderServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetCube",
			Handler:       _GeocubeDownloader_GetCube_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pb/geocubeDownloader.proto",
}
